#!/usr/bin/env ruby
require 'optparse'
require 'tepra'

include Tepra

global_options = {}
global = OptionParser.new do |opts|
	opts.banner = "tepra: a utility for Tepra"
	opts.define_head "Usage: tepra [options] [subcommand [options]]"
	opts.separator ""
	opts.separator "Commands:"
#	opts.separator "	medusa console"
#	opts.separator "	medusa console -e'p Stone.find(:first)'"	
#	opts.separator "	medusa upload <file>"
	opts.separator ""	
	opts.separator "Examples:"
	opts.separator "	tepra print csvfile"
	opts.separator ""
	opts.separator "Options:"


	opts.on_tail("-?", "--help", "Show this message") do
		puts opts
		exit
	end

	opts.on_tail("-v", "--[no-]verbose", "Run verbosely") do |v|
		global_options[:verbose] = v
	end

	opts.on_tail("-V", "--version", "Show version") do
		puts Tepra::VERSION
		exit
	end
end

subcommands = {
	'print' => OptionParser.new do |opts|
		opts.banner = "Usage: tepra printfile <csvfile>..."
	end,
	# 'remove' => OptionParser.new do |opts|
	# 	opts.banner = "Uage: medusa remove <global-ID>..."
	# end,
	# 'console' => OptionParser.new do |opts|
	# 	opts.banner = "Usage: medusa console"
	# 	opts.on("-e command", "Specifies script from command-line.") do |v|
	# 		@script = v
	# 	end		
	# end
}

global.order!

command = ARGV.shift
subcommands[command].order! if subcommands[command]

if global_options[:verbose]
	puts "global_optios: #{global_options}"
	if subcommands[command]
		puts "command: #{command}"
		puts "commad_options: #{command_options}"
	end
end

Base.init
if global_options[:verbose]
	puts "app_root:#{Base.app_root}"
	puts "template:#{Base.template_path}"
end


case command
	when "upload"
		if ARGV.size == 0
			puts subcommands['upload']
			exit
		end
		ARGV.each do |file|
			upload_file(file)
		end
	when "remove"
		if ARGV.size == 0
			puts subcommands['remove']
			exit
		end	
		ARGV.each do |global_id|
			remove_obj(global_id)
		end
	when "console"
		start_console
	else
		puts global
	end